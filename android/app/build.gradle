plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0.0'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

if (getGradle().getStartParameter().getTaskRequests()
        .toString().contains("External")) {
    apply plugin: "com.google.gms.google-services"
}

android {
    compileSdk 34
    namespace 'com.chenyifaer.homingpigeon'
    // ndkVersion '26.3.11579264'

    compileOptions {
        // flutter_local_notifications
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'

        internal {
            res.srcDirs += 'src/internal/res'
        }

        external {
            res.srcDirs += 'src/external/res'
        }
    }

    defaultConfig {
        applicationId "com.chenyifaer.homingpigeon"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-build-configuration.
        minSdkVersion 24
        targetSdk 34
        versionName flutterVersionName
        versionCode flutterVersionCode.toInteger()
        multiDexEnabled true

        manifestPlaceholders = manifestPlaceholders + [
            JPUSH_APPKEY : "", // JPush 上注册的包名对应的 App Key.
            JPUSH_CHANNEL : "", // 暂时填写默认值即可.
        ]
    }

    // https://developer.android.com/build/configure-apk-splits
    splits {
        abi {
            enable true
            reset()
            universalApk true  // If true, also generate a universal APK
            include "armeabi-v7a", "arm64-v8a", "x86_64"
        }
    }

    flavorDimensions "default", "env"
    productFlavors {
        // 国内分发
        internal {
            dimension "default"
            proguardFile 'dx-proguard-rules.pro'
        }

        // 国外分发
        external {
            dimension "default"
        }

        staging {
            dimension "env"
            applicationIdSuffix ".dev"
            manifestPlaceholders = manifestPlaceholders + [ JPUSH_PKGNAME : "com.chenyifaer.homingpigeon.dev" ]
        }

        production {
            dimension "env"
            manifestPlaceholders = manifestPlaceholders + [ JPUSH_PKGNAME : "com.chenyifaer.homingpigeon" ]
        }
    }

    signingConfigs {
        if (System.getenv("ANDROID_KEYSTORE_PATH")) {
            release {
                storeFile file(System.getenv("ANDROID_KEYSTORE_PATH"))
                keyAlias System.getenv("ANDROID_KEYSTORE_ALIAS")
                keyPassword System.getenv("ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD")
                storePassword System.getenv("ANDROID_KEYSTORE_PASSWORD")
            }
        } else {
            release {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
                storePassword keystoreProperties['storePassword']
            }
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.debug
        }
    }

    packagingOptions {
        jniLibs {
            // Enabling flag to compress JNI Libs to reduce APK size Ref: https://developer.android.com/topic/performance/reduce-apk-size?hl=zh-cn#extract-false
            useLegacyPackaging true
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation(name: 'tls12patch', ext: 'aar')

    // flutter_local_notifications
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.2'
    implementation 'androidx.window:window:1.3.0'
    implementation 'androidx.window:window-java:1.3.0'

    externalImplementation "com.google.android.gms:play-services-auth:21.2.0"
}

import com.android.build.OutputFile

android.applicationVariants.all { variant ->
  variant.outputs.each { output ->
        def flavorName = variant.flavorName
        def suffix = flavorName.contains("external") ? "external" : "internal"
        def abi = output.getFilter(OutputFile.ABI)
        def arch = abi == null ? "universal" : abi
        def outputFileName = "Pigeon-${suffix}_${arch}.apk"
        output.outputFileName = outputFileName
    }
}
